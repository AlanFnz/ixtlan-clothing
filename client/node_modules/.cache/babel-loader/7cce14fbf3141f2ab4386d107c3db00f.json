{"ast":null,"code":"var _jsxFileName = \"C:\\\\Apps\\\\ixtlan-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { signUpStart, emailSignInStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    const {\n      signUpStart\n    } = this.props;\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    signUpStart(displayName, email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = this.state;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: this.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: this.handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: this.handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: this.handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: this.handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(signUpStart({\n    displayName,\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Apps/ixtlan-clothing/src/components/sign-up/sign-up.component.js"],"names":["React","useState","connect","signUpStart","emailSignInStart","FormInput","CustomButton","auth","createUserProfileDocument","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","state","props","alert","handleChange","name","value","target","setState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signUpStart, emailSignInStart } from '../../redux/user/user.actions';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\r\nimport './sign-up.styles.scss';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n    const [userCredentials, setUserCredentials] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n    })\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const { displayName, email, password, confirmPassword } = this.state;\r\n        const { signUpStart } = this.props;\r\n\r\n        if(password !== confirmPassword){\r\n            alert(\"Passwords don't match\");\r\n            return; \r\n        } \r\n        signUpStart(displayName, email, password);\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    const { displayName, email, password, confirmPassword } = this.state;\r\n    return (\r\n        <div className=\"sign-up\">\r\n            <h2 className=\"title\">I do not have an account</h2>\r\n            <span>Sign up with your email and password</span>\r\n            <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\r\n                <FormInput\r\n                    type=\"text\"\r\n                    name=\"displayName\"\r\n                    value= {displayName}\r\n                    onChange={this.handleChange}\r\n                    label=\"Display Name\"\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value= {email}\r\n                    onChange={this.handleChange}\r\n                    label=\"Email\"\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value= {password}\r\n                    onChange={this.handleChange}\r\n                    label=\"Password\"\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value= {confirmPassword}\r\n                    onChange={this.handleChange}\r\n                    label=\"Confirm Password\"\r\n                    required\r\n                />\r\n                <CustomButton type=\"submit\">\r\n                    SIGN UP\r\n                </CustomButton>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: (displayName, email, password) => dispatch(signUpStart({ displayName, email, password }))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}