{"ast":null,"code":"var _jsxFileName = \"C:\\\\Apps\\\\ixtlan-clothing\\\\client\\\\src\\\\components\\\\contact-form\\\\contact-form.component.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect'; // Selectors\n\nimport { selectCurrentUser } from '../../redux/user/user.selectors'; // Components\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\"; // Styles\n\nimport \"./contact-form.styles.scss\";\n\nconst ContactForm = props => {\n  const [state, setState] = useState({\n    email: \"\",\n    message: \"\"\n  });\n  useEffect(() => {\n    if (props.currentUser && props.currentUser.email) {\n      setState(prevState => ({ ...prevState,\n        email: props.currentUser.email\n      }));\n    }\n  }, [props.currentUser.email]);\n  console.log(props);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setState(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Leave your message\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    style: {\n      background: \"rgba(245,245,245,0.6)\"\n    },\n    name: \"email\",\n    type: \"email\",\n    value: state.email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    Tag: \"textarea\",\n    style: {\n      height: \"150px\",\n      overflowWrap: 'break-word',\n      wordWrap: 'break-word',\n      background: \"rgba(245,245,245,0.6)\"\n    },\n    name: \"message\",\n    type: \"textarea\",\n    value: state.message,\n    handleChange: handleChange,\n    label: \"message\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Send message\"))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\nexport default connect(mapStateToProps)(ContactForm);","map":{"version":3,"sources":["C:/Apps/ixtlan-clothing/client/src/components/contact-form/contact-form.component.js"],"names":["React","useState","useEffect","connect","createStructuredSelector","selectCurrentUser","FormInput","CustomButton","ContactForm","props","state","setState","email","message","currentUser","prevState","console","log","handleSubmit","event","preventDefault","handleChange","value","name","target","background","height","overflowWrap","wordWrap","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n// Selectors\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\r\n// Components\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n// Styles\r\nimport \"./contact-form.styles.scss\";\r\n\r\nconst ContactForm = (props) => {\r\n  const [state, setState] = useState({\r\n    email: \"\",\r\n    message: \"\",\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.currentUser && props.currentUser.email) {\r\n\t\t\tsetState((prevState) => ({ ...prevState, email: props.currentUser.email }))\r\n\t\t}\r\n\t}, [props.currentUser.email]);\r\n\t\r\n\tconsole.log(props);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n    setState((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-form\">\r\n      <h2 className=\"title\">Leave your message</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n\t\t\t\tstyle={{ background: \"rgba(245,245,245,0.6)\"}}\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={state.email}\r\n          handleChange={handleChange}\r\n          label=\"email\"\r\n          required\r\n        />\r\n        <FormInput\r\n\t\t\t\t\tTag='textarea'\r\n\t\t\t\t\tstyle={{ height: \"150px\", overflowWrap: 'break-word', wordWrap: 'break-word', background: \"rgba(245,245,245,0.6)\"}}\r\n          name=\"message\"\r\n          type=\"textarea\"\r\n          value={state.message}\r\n          handleChange={handleChange}\r\n          label=\"message\"\r\n          required\r\n        />\r\n        <div className=\"buttons\">\r\n          <CustomButton type=\"submit\">Send message</CustomButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\tcurrentUser: selectCurrentUser,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactForm);\r\n"]},"metadata":{},"sourceType":"module"}